--
-- PostgreSQL database dump
--

-- Dumped from database version 14.0
-- Dumped by pg_dump version 14.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: timescaledb; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS timescaledb WITH SCHEMA public;


--
-- Name: EXTENSION timescaledb; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION timescaledb IS 'Enables scalable inserts and complex queries for time-series data';


--
-- Name: file_fdw; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS file_fdw WITH SCHEMA public;


--
-- Name: EXTENSION file_fdw; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION file_fdw IS 'foreign-data wrapper for flat file access';


--
-- Name: mysum(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.mysum(a integer, b integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
	BEGIN
		RETURN a + b;
	END;
$$;


ALTER FUNCTION public.mysum(a integer, b integer) OWNER TO postgres;

--
-- Name: mydatasrv; Type: SERVER; Schema: -; Owner: postgres
--

CREATE SERVER mydatasrv FOREIGN DATA WRAPPER file_fdw;


ALTER SERVER mydatasrv OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: customer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customer (
    kod_cutomer integer,
    inn integer,
    name_customer text,
    addresss text,
    phone integer,
    bank_account_number integer
);


ALTER TABLE public.customer OWNER TO postgres;

--
-- Name: invoice; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.invoice (
    number_invoice integer,
    kod_warehouse integer,
    date_send text,
    number_contract integer,
    sum_invoice numeric
);


ALTER TABLE public.invoice OWNER TO postgres;

--
-- Name: mydata; Type: FOREIGN TABLE; Schema: public; Owner: postgres
--

CREATE FOREIGN TABLE public.mydata (
    x integer,
    y integer
)
SERVER mydatasrv
OPTIONS (
    filename '/home/postgres/data.csv',
    format 'csv'
);


ALTER FOREIGN TABLE public.mydata OWNER TO postgres;

--
-- Name: plan; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plan (
    number_contract integer,
    kod_product integer,
    delivery_time text,
    kod_delivery integer,
    sum_deilvery integer
);


ALTER TABLE public.plan OWNER TO postgres;

--
-- Name: product; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.product (
    kod_product integer,
    name_product text,
    price numeric,
    photo text
);


ALTER TABLE public.product OWNER TO postgres;

--
-- Name: scontract; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scontract (
    number_contract integer,
    date_contract text,
    kod_costumer integer,
    sum_contract numeric
);


ALTER TABLE public.scontract OWNER TO postgres;

--
-- Name: shipment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shipment (
    number_invoice integer,
    kod_warehouse integer,
    kod_product integer,
    kod_shipment integer,
    sum_send numeric
);


ALTER TABLE public.shipment OWNER TO postgres;

--
-- Name: warehouse; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.warehouse (
    kod_warehouse integer,
    name_warehouse text,
    responsible_person text,
    address_warehouse text
);


ALTER TABLE public.warehouse OWNER TO postgres;

--
-- Data for Name: cache_inval_bgw_job; Type: TABLE DATA; Schema: _timescaledb_cache; Owner: postgres
--

COPY _timescaledb_cache.cache_inval_bgw_job  FROM stdin;
\.


--
-- Data for Name: cache_inval_extension; Type: TABLE DATA; Schema: _timescaledb_cache; Owner: postgres
--

COPY _timescaledb_cache.cache_inval_extension  FROM stdin;
\.


--
-- Data for Name: cache_inval_hypertable; Type: TABLE DATA; Schema: _timescaledb_cache; Owner: postgres
--

COPY _timescaledb_cache.cache_inval_hypertable  FROM stdin;
\.


--
-- Data for Name: hypertable; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.hypertable (id, schema_name, table_name, associated_schema_name, associated_table_prefix, num_dimensions, chunk_sizing_func_schema, chunk_sizing_func_name, chunk_target_size, compression_state, compressed_hypertable_id, replication_factor) FROM stdin;
\.


--
-- Data for Name: chunk; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.chunk (id, hypertable_id, schema_name, table_name, compressed_chunk_id, dropped, status) FROM stdin;
\.


--
-- Data for Name: dimension; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.dimension (id, hypertable_id, column_name, column_type, aligned, num_slices, partitioning_func_schema, partitioning_func, interval_length, integer_now_func_schema, integer_now_func) FROM stdin;
\.


--
-- Data for Name: dimension_slice; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.dimension_slice (id, dimension_id, range_start, range_end) FROM stdin;
\.


--
-- Data for Name: chunk_constraint; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.chunk_constraint (chunk_id, dimension_slice_id, constraint_name, hypertable_constraint_name) FROM stdin;
\.


--
-- Data for Name: chunk_data_node; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.chunk_data_node (chunk_id, node_chunk_id, node_name) FROM stdin;
\.


--
-- Data for Name: chunk_index; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.chunk_index (chunk_id, index_name, hypertable_id, hypertable_index_name) FROM stdin;
\.


--
-- Data for Name: compression_chunk_size; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.compression_chunk_size (chunk_id, compressed_chunk_id, uncompressed_heap_size, uncompressed_toast_size, uncompressed_index_size, compressed_heap_size, compressed_toast_size, compressed_index_size, numrows_pre_compression, numrows_post_compression) FROM stdin;
\.


--
-- Data for Name: continuous_agg; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.continuous_agg (mat_hypertable_id, raw_hypertable_id, user_view_schema, user_view_name, partial_view_schema, partial_view_name, bucket_width, direct_view_schema, direct_view_name, materialized_only) FROM stdin;
\.


--
-- Data for Name: continuous_aggs_hypertable_invalidation_log; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log (hypertable_id, lowest_modified_value, greatest_modified_value) FROM stdin;
\.


--
-- Data for Name: continuous_aggs_invalidation_threshold; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.continuous_aggs_invalidation_threshold (hypertable_id, watermark) FROM stdin;
\.


--
-- Data for Name: continuous_aggs_materialization_invalidation_log; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.continuous_aggs_materialization_invalidation_log (materialization_id, lowest_modified_value, greatest_modified_value) FROM stdin;
\.


--
-- Data for Name: hypertable_compression; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.hypertable_compression (hypertable_id, attname, compression_algorithm_id, segmentby_column_index, orderby_column_index, orderby_asc, orderby_nullsfirst) FROM stdin;
\.


--
-- Data for Name: hypertable_data_node; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.hypertable_data_node (hypertable_id, node_hypertable_id, node_name, block_chunks) FROM stdin;
\.


--
-- Data for Name: metadata; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.metadata (key, value, include_in_telemetry) FROM stdin;
\.


--
-- Data for Name: remote_txn; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.remote_txn (data_node_name, remote_transaction_id) FROM stdin;
\.


--
-- Data for Name: tablespace; Type: TABLE DATA; Schema: _timescaledb_catalog; Owner: postgres
--

COPY _timescaledb_catalog.tablespace (id, hypertable_id, tablespace_name) FROM stdin;
\.


--
-- Data for Name: bgw_job; Type: TABLE DATA; Schema: _timescaledb_config; Owner: postgres
--

COPY _timescaledb_config.bgw_job (id, application_name, schedule_interval, max_runtime, max_retries, retry_period, proc_schema, proc_name, owner, scheduled, hypertable_id, config) FROM stdin;
\.


--
-- Data for Name: customer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customer (kod_cutomer, inn, name_customer, addresss, phone, bank_account_number) FROM stdin;
0	4124141	Pavel	Address empty	1193450	3327876
1	55235235	Kilo	Address empty	423423	5684317
2	53423765	Artem	Address empty	2951367	86576545
3	4124141	Harry	Address empty	1662208	2783492
4	4124141	Jacob	Address empty	1753454	2648717
5	4124141	Charley	Address empty	1593916	2407663
6	4124141	Thomas	Address empty	3931514	7455266
7	4124141	George	Address empty	5001829	2543809
8	4124141	Oscar	Address empty	8966534	9245541
9	4124141	Adam	Address empty	3629572	1288415
10	4124141	Dominic	Address empty	8290139	3366906
11	4124141	Donald	Address empty	5780314	12345436
12	4124141	Gordon	Address empty	6886219	6461016
13	4124141	Herbert	Address empty	5813527	1524119
14	4124141	Jordan	Address empty	5126814	3309862
15	4124141	Logan	Address empty	1815696	7287211
16	4124141	Louis	Address empty	5605423	3302875
17	4124141	Megan	Address empty	2057591	9993259
18	4124141	Nathan	Address empty	8819456	5235545
19	4124141	Lucas	Address empty	1991859	6963068
20	1785617	Alexander	Address empty	1831248	4919467
21	6931455	Aaron	Address empty	3251893	2103218
22	7077083	Albert	Address empty	6082528	8505118
23	7144368	Anthony	Address empty	9453097	9771662
24	6518035	Adam	Address empty	6855409	8043696
25	7602968	Ashton	Address empty	7406473	9419608
26	9726321	Albert	Address empty	7978965	4035727
27	5890743	Aidan	Address empty	7317719	8762031
28	7095399	Adam	Address empty	3094504	4104586
29	4388816	Albert	Address empty	2961971	3640260
30	9524621	Antonio	Address empty	9030805	2191972
31	8725292	Angel	Address empty	9871650	8341579
32	8554336	Albert	Address empty	2410226	8180135
33	3490122	Abraham	Address empty	2025103	6490276
34	4956678	Alfred	Address empty	7099764	1349707
35	7686778	Abraham	Address empty	5944502	6996981
36	6469925	Diablo	Address empty	7469849	5541556
37	3248390	Ashton	Address empty	4513720	3065760
38	1355676	Aidan	Address empty	9515767	4421521
39	1623988	Adrian	Address empty	8327563	1436192
40	8189637	Alan	Address empty	8147063	3103897
41	6899113	Aidan	Address empty	8889195	8089741
42	7431024	Adam	Address empty	7921937	4407794
43	8060401	Abraham	Address empty	7924512	2493332
44	8994986	Andrew	Address empty	9190787	7446677
45	6483200	Alan	Address empty	9704310	6728780
46	4761248	Aidan	Address empty	2273746	2140156
47	2579667	Adrian	Address empty	4021120	2988785
48	6229857	Ashton	Address empty	7172679	7808816
49	1013120	Austin	Address empty	1900177	3565102
\.


--
-- Data for Name: invoice; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.invoice (number_invoice, kod_warehouse, date_send, number_contract, sum_invoice) FROM stdin;
35	49	2022-01-04	21688	763.4
665	10	2022-08-22	21679	412.1
622	64	2022-10-30	21650	178.3
53	1	2022-01-21	21664	960.2
539	64	2022-08-10	21667	170.0
613	69	2022-07-30	21696	70.1
36	58	2022-07-04	21688	812.2
600	67	2022-05-11	21662	498.9
570	15	2022-10-20	21648	657.5
57	80	2022-09-27	21682	405.6
771	64	2022-07-22	21654	567.9
995	86	2022-05-14	21662	637.8
619	95	2022-06-02	21665	588.7
113	83	2022-03-03	21677	517.5
458	90	2022-02-05	21689	522.3
953	100	2022-04-03	21690	648.1
698	33	2022-05-20	21676	216.1
372	33	2022-03-07	21662	385.2
320	59	2022-07-12	21693	822.5
459	61	2022-02-13	21653	350.7
533	54	2022-07-04	21697	801.8
293	49	2022-01-21	21652	296.1
971	15	2022-06-26	21664	537.0
326	24	2022-07-08	21668	191.0
557	41	2022-08-05	21673	412.8
966	33	2022-08-09	21654	125.9
132	89	2022-01-10	21697	532.5
193	59	2022-06-12	21687	427.5
285	40	2022-10-17	21680	744.0
131	91	2022-03-04	21675	387.1
999	55	2022-04-03	21683	439.6
289	71	2022-10-13	21687	758.1
418	67	2022-04-02	21674	121.9
283	100	2022-10-19	21673	428.2
605	55	2022-04-23	21659	271.0
74	28	2022-10-29	21654	318.4
724	60	2022-02-19	21679	410.2
385	91	2022-02-17	21676	869.3
34	83	2022-08-26	21677	481.3
83	29	2022-08-01	21694	184.6
171	24	2022-01-05	21691	677.5
77	5	2022-10-20	21675	354.7
179	92	2022-03-18	21660	114.3
168	82	2022-10-12	21696	762.8
741	11	2022-11-04	21680	795.3
624	81	2022-03-25	21695	563.6
902	85	2022-01-22	21668	416.2
876	41	2022-06-04	21673	170.7
664	67	2022-09-11	21671	915.7
398	7	2022-07-29	21651	798.6
\.


--
-- Data for Name: plan; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.plan (number_contract, kod_product, delivery_time, kod_delivery, sum_deilvery) FROM stdin;
21648	7113326	00:50	685	1531
21676	7672231	05:18	162	1129
21651	2596256	13:54	266	1404
21656	3208989	03:38	732	1599
21655	8242747	03:33	940	1652
21671	7358198	07:42	425	1246
21665	8112815	04:11	742	959
21661	6384284	03:20	812	1248
21686	5560674	00:44	988	1746
21648	6413367	01:05	971	1442
21666	7476006	19:08	514	1341
21649	8774174	13:22	133	1746
21660	8979024	15:23	660	955
21659	6397161	13:40	913	991
21665	3150804	01:13	759	1234
21656	2870375	09:31	397	923
21648	8874895	12:26	555	1294
21675	4938007	07:31	653	1048
21675	8345720	00:47	565	1534
21691	1080957	04:51	639	1224
21657	9713326	01:53	591	711
21664	2373453	16:33	984	1733
21671	9248263	05:18	511	691
21649	3828054	17:01	712	1280
21675	3333769	18:33	792	1453
21684	8069277	13:46	423	1721
21667	5977930	14:25	674	731
21645	1937714	12:12	416	1355
21657	4907266	14:34	307	1371
21660	4949274	02:51	438	1082
21682	6100836	14:00	366	1303
21658	3130451	03:48	834	1481
21670	2569075	08:00	321	1424
21667	4438766	16:52	166	1079
21650	3329689	19:32	757	971
21681	7138875	05:52	334	1815
21695	8891589	10:24	947	1183
21664	2425339	18:48	455	1926
21681	9205079	02:17	740	1423
21672	8660264	06:14	188	1126
21651	5795394	14:25	632	1849
21694	5134219	05:59	368	1593
21676	6924741	16:33	387	1505
21656	8185867	15:49	622	1793
21659	3688134	16:20	531	1258
21678	2023784	19:19	166	1483
21677	9495357	15:27	137	1645
21666	8694768	09:22	439	1480
21652	8416373	04:35	802	1199
21658	3415657	05:46	294	767
\.


--
-- Data for Name: product; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.product (kod_product, name_product, price, photo) FROM stdin;
3183723	onion	1993.33	json-sha256: ce02d4b6d1aceeea96a562c10923d590607df6182b4a3405ad10be85b6354787
3033629	onion	6655.72	json-sha256: a0f8b2c4cb1ac82abdb37f0fe5203b97be556c4468c83bba18684d620fd8eaf9
7269859	frozen vegetable	5134.54	json-sha256: 98144d79af44407273f26589afc01901b7b296deada61a4740b0d404c5043c53
1865042	pork meat	3992.71	json-sha256: 2f1d593cd98cb5bf81eb9d880221122342784ac5fb7f41f2b137006bafc92e39
7270791	frozen vegetable	1684.18	json-sha256: 7ffc2066e20c16e95c0b41167e334afe57ff4991b21c8d581611a3f516a786a9
6781886	onion	3614.7	json-sha256: 30e4c02268d49ca010e3c62fcc2615da2fad4cf0c359eb8fedc0366739b34205
8947191	chicken with bones	3147.4	json-sha256: 3635a91e3da857f7847f68185a116a5260d2593f3913f6b1b66cc2d75b0d6ec0
1811419	frozen vegetable	2793.94	json-sha256: 3daebbc6dfd81355f1cc9d9565ab4a4a53bda47f6117529409acc7acb55556bb
6062691	frozen peas	2601.23	json-sha256: 7f2253d7e228b22a08bda1f09c516f6fead81df6536eb02fa991a34bb38d9be8
3019345	noodles	6938.51	json-sha256: 6af1f692e9496c6d0b668316eccb93276ae6b6774fa728aac31ff40a38318760
4581628	frozen peas	5841.1	json-sha256: 98a3ab7c340e8a033e7b37b6ef9428751581760af67bbab2b9e05d4964a8874a
5944063	potatoes	7691.57	json-sha256: 6c0f3412848008d49d186d5fad7fd1482656cfb62ad3c060a14e41c3fb3f1b43
4924007	soup vegetableminced meat	6404.74	json-sha256: 00bebc5be79d19e1b8b3f250dc39aebfa9a054baf5f8d61380438d92394c476a
8519255	potatoes	6258.22	json-sha256: 1c49f22f6de9bd15e5e566fa8983be4cfa4709abf0f95edf96dcd3d6249c2649
6128841	food cream	7538.04	json-sha256: 73d3f1ba062585bce51f77d70a26be88c44b55d70f81b8bd7e2ded030ca4454a
7835969	food cream	2845.48	json-sha256: af180e4359fc6179dc953abdcbdcaf7c146b53e1bee2b335e50dead11ccefa07
6351066	pork meat	2338.51	json-sha256: 9197e4844abed2fea3569a2acf7b0d584c979c333ab7ae10ba6c339898776f5a
6160209	food cream	8037.51	json-sha256: ca0cec7f60085f0289aaea5cbfbdd84ad2ba05148de121075dab1c636682a566
8344138	food cream	5143.67	json-sha256: e1bb74a7794720edf4935a8813538e8113491318168b1fa61a0ac3528e7b0440
8707464	frozen peas	5040.53	json-sha256: 734d0759cdb4e0d0a35e4fd73749aee287e4fdcc8648b71a8d6ed591b7d4cb3f
3845746	onion	2516.89	json-sha256: dac53c17c250fd4d4d81eaf6d88435676dac1f3f3896441e277af839bf50ed8a
5522630	potatoes	4706.88	json-sha256: 23e8b0175874e1bb3b4799e13a6634a8eddb456c1b8675b871e07ec09abc0c07
3578790	food cream	3377.14	json-sha256: 86e50149658661312a9e0b35558d84f6c6d3da797f552a9657fe0558ca40cdef
7157040	food cream	7585.54	json-sha256: f10d91a7596bf5a6773579ff1306afdc363b0be08602c768907c09261cad3a56
8181118	onion	6383.53	json-sha256: 050a010ce24d0896056e9a36a1940738d38f469d644b3682cfcc47569739c525
7754038	chicken with bones	5569.56	json-sha256: 8bd9c0d453533757387ed019c45617cdc440ba680a67b1a101c85b998ef715c0
2392099	chicken with bones	5041.47	json-sha256: 39bb88f40d3aa2b2fe9dea67be27c74765db0ebb3ff3cf8fb779af6319fa2045
7754798	food cream	2765.35	json-sha256: ee62de25ccc2b55d3a0495244b246fb97055b6f1c2697d837b8e94976c03756f
6624653	food cream	8265.91	json-sha256: 87e29676d583c04a1682dbd5bc0d989f8311c888655ca66bc486b6f7f76d4702
4076053	noodles	1774.58	json-sha256: 3963317a2b410e5357f4d839787aedb9ceef495514fe5cd91f846ab3a59621e0
6267947	soup vegetableminced meat	8262.04	json-sha256: ba689abd93c9c6a7d08b5b5c04dd27f6d69755ebe9a87fb969e73dfc11660e38
7644116	soup vegetableminced meat	8464.11	json-sha256: e7f6c011776e8db7cd330b54174fd76f7d0216b612387a5ffcfb81e6f0919683
3830699	chicken with bones	8064.29	json-sha256: 54006483f014c53f76d879c033e5589a76e0080d8ced5d818d777344eb78656f
3185555	frozen peas	6572.16	json-sha256: a917ca757ac59f9d568616140c2f72362fc2722ab277e7b5019008f280f17beb
9724996	food cream	8596.41	json-sha256: f10d91a7596bf5a6773579ff1306afdc363b0be08602c768907c09261cad3a56
1995024	chicken with bones	2848.02	json-sha256: fc091d39524c9d4b5b11f84f9132996a94ca01c9816d2db3b866bef1b0699d91
5959010	potatoes	5835.97	json-sha256: a3af7b3808c4cf72478d05c9bab9c0d47e31c1d2cb3a29e7481669f7ea278c4e
2252715	soup vegetableminced meat	2736.42	json-sha256: 5dad6478e152b8aa33dc6a2c27992d26c0a6873d6ed1407a7e6efddca3985122
7914955	pork meat	2765.09	json-sha256: 82a93b152b275d4c8de67c3d05c9b00e92477eeb024f117c7632cdb26fd874aa
3272452	noodles	4727.98	json-sha256: 97a6d21df7c51e8289ac1a8c026aaac143e15aa1957f54f42e30d8f8a85c3a55
8566619	pork meat	7412.52	json-sha256: 5a39cadd1b007093db50744797c7a04a34f73b35ed444704206705b02597d6fd
2560160	soup vegetableminced meat	2415.09	json-sha256: ad723f42c7aba316d944f19f340ce47d8e0c6fb354d212736ec4782314a6824a
2396528	soup vegetableminced meat	4484.18	json-sha256: ddfe0e8d462af661f81db36589c39882dc0f2330785b5d80cd34f2f520ad618f
4340938	potatoes	2689.44	json-sha256: 68f10bf021d7734e071e07bbf561aa0f1bfc7974f266f71311b9177b177d39d1
7971142	food cream	3782.23	json-sha256: f7c2599681e9284ce1c403459e22b730e997d67d16c45c4f593108e8372029a9
3020995	potatoes	7866.9	json-sha256: 303c8bd55875dda240897db158acf70afe4226f300757f3518b86e6817c00022
8753323	frozen vegetable	1237.66	json-sha256: 7125e777a6b199fc4e8c2a0d024215e393c06bf775c217a5f2d8d1a6a7c98d96
2839484	frozen vegetable	4864.71	json-sha256: 72ba187b05e705de2dced5824d716a71872dedccf21f0c179bd2d5f2c7c974b1
6635135	onion	6407.42	json-sha256: a3af7b3808c4cf72478d05c9bab9c0d47e31c1d2cb3a29e7481669f7ea278c4e
5901926	frozen peas	580.58	json-sha256: 46f9d22816179479bd27b0036854788327eedf3f6f5d8dcb866b976e17cc9715
\.


--
-- Data for Name: scontract; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scontract (number_contract, date_contract, kod_costumer, sum_contract) FROM stdin;
2800800	2022-09-21	1	8933.66
5021652	2022-08-02	0	2084.03
7707189	2022-09-12	7	38083.7
1671398	2022-05-20	7	26370.2
8375890	2022-09-07	48	26415.94
2783565	2022-06-23	21	21957.11
2141653	2022-01-08	8	11309.46
4698099	2022-04-03	42	30107.3
6202274	2022-10-21	11	13940.21
8182727	2022-07-03	2	28158.29
7725317	2022-01-04	7	26520.36
7403933	2022-05-02	32	11749.91
6177117	2022-03-17	11	15366.65
3582709	2022-04-05	15	37812.73
1903282	2022-02-10	10	31760.85
3957203	2022-07-21	19	25495.85
7347368	2022-04-02	14	22375.37
1157510	2022-05-09	45	39325.92
8574218	2022-11-08	32	16254.76
6949868	2022-05-19	0	25854.28
6460195	2022-11-01	1	25081.37
1671288	2022-08-30	27	39756.79
5531018	2022-10-05	20	7617.37
1071482	2022-01-02	36	11490.08
9255582	2022-07-24	28	27277.98
3149312	2022-09-18	9	26507.85
5582647	2022-07-08	41	16035.93
5867776	2022-03-02	1	34825.89
8304113	2022-10-07	14	28241.62
1961738	2022-02-16	34	6299.34
8853058	2022-03-09	1	44591.76
1012518	2022-06-28	8	37034.91
2474559	2022-04-11	18	34690.79
3477993	2022-01-23	34	16636.57
9163337	2022-03-11	2	15667.59
7218978	2022-02-10	19	16635.27
8185777	2022-09-16	33	14972.11
2431618	2022-01-12	20	34054.58
8339898	2022-11-07	3	14353.92
1015275	2022-04-21	44	25744.4
1541412	2022-08-28	22	12435.11
6732549	2022-06-21	23	18232.16
2097752	2022-11-02	27	17850.23
7284454	2022-07-13	27	25637.63
8840000	2022-07-28	19	21411.83
1898395	2022-04-20	27	31012.99
2473284	2022-06-29	35	21545.79
1649117	2022-10-12	27	8444.19
2223194	2022-01-16	32	23207.8
7144155	2022-06-25	32	20803.09
\.


--
-- Data for Name: shipment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shipment (number_invoice, kod_warehouse, kod_product, kod_shipment, sum_send) FROM stdin;
336	78	9900389	94	368.2
932	57	4961466	6	787.8
329	83	6652766	1	826.4
466	37	5230687	54	658.1
675	60	1398958	80	585.9
190	15	8639006	48	712.0
436	97	2823948	38	726.0
228	76	7492003	94	654.2
379	26	6003983	74	405.0
55	99	2725016	25	342.3
181	92	9308331	3	504.5
592	62	8598699	64	570.1
114	6	5143333	76	704.3
230	84	9032340	61	321.3
515	62	5104135	80	451.9
299	64	2163336	56	600.0
969	51	3801762	76	724.8
663	96	6465376	73	313.8
511	74	6389358	2	757.2
452	51	4760773	98	508.2
488	19	9544275	35	637.7
849	96	8908065	3	421.1
180	32	7545047	19	646.6
662	67	1713591	40	637.1
445	31	9885587	56	626.9
205	35	2684016	10	380.5
372	20	4277680	12	655.4
144	16	4907734	54	695.4
282	91	5291129	97	802.0
902	6	1458366	44	896.9
246	51	6039524	60	555.1
489	67	3231779	62	510.4
218	10	9791213	38	651.8
158	61	8455391	78	919.0
838	49	7100589	80	782.8
935	5	6532203	77	264.5
417	43	3756933	45	468.3
827	37	8031217	25	514.1
395	36	3173579	69	451.6
958	34	2278118	92	816.6
219	94	4582869	42	342.8
539	56	6826102	22	661.5
90	55	5157496	37	453.6
80	27	9417821	31	530.2
212	47	3179951	67	517.1
163	32	2303546	70	478.1
218	78	9101864	88	590.4
673	25	9693903	73	280.8
948	60	6188837	2	719.8
736	57	6387857	40	638.2
\.


--
-- Data for Name: warehouse; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.warehouse (kod_warehouse, name_warehouse, responsible_person, address_warehouse) FROM stdin;
29	Art Lane	Glover Micheal	Microraion Zelenyi d. 32
58	Art Lane	Shirley Moore	ul. Tsvetochnaya d18
15	Queen Route	Bessie James	prosp. Stroiteley d. 56
99	Knight Lane	Lee Stevens	Castle Court d.42
84	Brewers Lane	Doyle Ruth	Castle Court d.24
40	Art Lane	Carlson Julia	Castle Court d.9
50	Winter Way	Morrison Morrison	3th Microraion d. 39
82	Fleet Passage	Naomi Johnson	Brewers Lane d.33
21	Knight Lane	Johnson Hall	Bolton Road d. 43
69	Art Lane	Dorothy Jennifer	Hazelnut Lane d.59
62	Brewers Lane	Sarah Michael	Microraion Zelenyi d. 36
43	Winter Way	Barbara Gregory	Hazelnut Lane d.18
16	Brewers Lane	David Campbell	Microraion Zelenyi d. 1
34	Art Lane	Eugene Smith	prosp. Stroiteley d. 17
15	Hawthorn Way	Lillian Brown	Hazelnut Lane d.23
83	Queen Route	Price FernandezMae	Microraion Zelenyi d. 52
65	Brewers Lane	James Estrada	Microraion Zelenyi d. 47
32	Queen Route	James Matthew	3th Microraion d. 65
51	Silver Avenue	Maria Martin	Microraion Zelenyi d. 10
22	Queen Route	Estrada Campbell	ul. Tsvetochnaya d35
92	Hawthorn Way	Johnson Jessie	Bolton Road d. 64
10	Silver Avenue	Johnson Price	Bolton Road d. 66
28	Brewers Lane	Martin Hall	Bolton Road d. 1
59	Hawthorn Way	Ortiz Ricky	prosp. Stroiteley d. 8
59	Silver Avenue	Brown Andrew	Alexander Street d. 63
66	Fleet Passage	Marsha Clark	ul. Tsvetochnaya d48
50	Winter Way	 Collins	Brewers Lane d.38
43	Silver Avenue	James Holmes	Hazelnut Lane d.60
63	Hawthorn Way	Peterson Eugene	Alexander Street d. 42
59	Silver Avenue	Charles Miller	3th Microraion d. 8
93	Silver Avenue	Glover Alexander	Castle Court d.65
29	Hawthorn Way	Campbell Joseph	3th Microraion d. 40
67	Hazelnut Lane	David Pearson	Castle Court d.26
35	Hawthorn Way	Bessie Johnson	Bolton Road d. 68
37	Queen Route	FernandezMae Charles	Bolton Road d. 23
10	Winter Way	Clark Blake	3th Microraion d. 61
86	Silver Avenue	Gregory Miller	3th Microraion d. 1
49	Art Lane	Pearson Campbell	3th Microraion d. 35
42	Fleet Passage	Brown Hall	ul. Tsvetochnaya d65
31	Art Lane	Alfred Helen	Castle Court d.42
45	Fleet Passage	Michelle Jennifer	Hazelnut Lane d.58
97	Knight Lane	Estrada Blake	Brewers Lane d.43
64	Fleet Passage	Morrison Matthew	Microraion Zelenyi d. 63
20	Silver Avenue	Atkins David	prosp. Stroiteley d. 9
72	Hazelnut Lane	Powers Bishop	Microraion Zelenyi d. 15
30	Winter Way	Daniel Dorothy	Bolton Road d. 22
50	Art Lane	Morrison Joseph	Brewers Lane d.49
20	Silver Avenue	Dorothy James	Bolton Road d. 24
54	Hawthorn Way	Campbell Collins	Alexander Street d. 36
12	Silver Avenue	Betty Ruiz	prosp. Stroiteley d. 65
36	Brewers Lane	Brown Carrie	ul. Tsvetochnaya d43
\.


--
-- Name: chunk_constraint_name; Type: SEQUENCE SET; Schema: _timescaledb_catalog; Owner: postgres
--

SELECT pg_catalog.setval('_timescaledb_catalog.chunk_constraint_name', 1, false);


--
-- Name: chunk_id_seq; Type: SEQUENCE SET; Schema: _timescaledb_catalog; Owner: postgres
--

SELECT pg_catalog.setval('_timescaledb_catalog.chunk_id_seq', 1, false);


--
-- Name: dimension_id_seq; Type: SEQUENCE SET; Schema: _timescaledb_catalog; Owner: postgres
--

SELECT pg_catalog.setval('_timescaledb_catalog.dimension_id_seq', 1, true);


--
-- Name: dimension_slice_id_seq; Type: SEQUENCE SET; Schema: _timescaledb_catalog; Owner: postgres
--

SELECT pg_catalog.setval('_timescaledb_catalog.dimension_slice_id_seq', 1, false);


--
-- Name: hypertable_id_seq; Type: SEQUENCE SET; Schema: _timescaledb_catalog; Owner: postgres
--

SELECT pg_catalog.setval('_timescaledb_catalog.hypertable_id_seq', 1, true);


--
-- Name: bgw_job_id_seq; Type: SEQUENCE SET; Schema: _timescaledb_config; Owner: postgres
--

SELECT pg_catalog.setval('_timescaledb_config.bgw_job_id_seq', 1000, false);


--
-- PostgreSQL database dump complete
--

